{"ast":null,"code":"import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport firebaseConfig from './firebase.config';\nexport const initializeLoginFramework = () => {\n  firebase.initializeApp(firebaseConfig);\n};\nexport const handleGoogleSignIn = () => {\n  const googleProvider = new firebase.auth.GoogleAuthProvider();\n  firebase.auth().signInWithPopup(googleProvider).then(res => {\n    const {\n      displayName,\n      email,\n      photoURL\n    } = res.user;\n    const isSignedInUser = {\n      isSignedIn: true,\n      name: displayName,\n      email: email,\n      photo: photoURL\n    };\n    setUser(isSignedInUser);\n    console.log(displayName, email, photoURL);\n  }).catch(err => {\n    console.log(err);\n    console.log(err.message);\n  });\n};\nexport const handleFbSignIn = () => {\n  var fbProvider = new firebase.auth.FacebookAuthProvider();\n  firebase.auth().signInWithPopup(fbProvider).then(result => {\n    // This gives you a Facebook Access Token. You can use it to access the Facebook API.\n    var token = result.credential.accessToken; // The signed-in user info.\n\n    var user = result.user; // ...\n  }).catch(function (error) {\n    // Handle Errors here.\n    var errorCode = error.code;\n    var errorMessage = error.message; // The email of the user's account used.\n\n    var email = error.email; // The firebase.auth.AuthCredential type that was used.\n\n    var credential = error.credential; // ...\n  });\n};\nexport const handleSignOut = () => {\n  firebase.auth().signOut().then(res => {\n    const signedOutUser = {\n      isSignedIn: false,\n      name: '',\n      phone: '',\n      email: ''\n    };\n    setUser(signedOutUser);\n    console.log(res);\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const createUserWithEmailAndPassword = () => {\n  firebase.auth().createUserWithEmailAndPassword(user.email, user.password).then(res => {\n    const newUserInfo = { ...user\n    };\n    newUserInfo.error = '';\n    newUserInfo.success = true;\n    setUser(newUserInfo);\n    updateUserName(user.name);\n  }).catch(error => {\n    // Handle Errors here.\n    const newUserInfo = { ...user\n    };\n    newUserInfo.error = error.message;\n    newUserInfo.success = false;\n    setUser(newUserInfo);\n    var errorCode = error.code;\n    var errorMessage = error.message;\n    console.log(errorCode, errorMessage); // ...\n  });\n};\nexport const signInWithEamilAndPassword = () => {\n  firebase.auth().signInWithEmailAndPassword(user.email, user.password).then(res => {\n    const newUserInfo = { ...user\n    };\n    newUserInfo.error = '';\n    newUserInfo.success = true;\n    setUser(newUserInfo);\n    setLoggedInUser(newUserInfo);\n    history.replace(from);\n    console.log('sign in User Info', res.user);\n  }).catch(error => {\n    // Handle Errors here.\n    const newUserInfo = { ...user\n    };\n    newUserInfo.error = error.message;\n    newUserInfo.success = false;\n    setUser(newUserInfo);\n    var errorCode = error.code;\n    var errorMessage = error.message;\n    console.log(errorCode, errorMessage); // ...\n  });\n};","map":{"version":3,"sources":["C:/webDevelopment/myProjects/firebase-Ema-John-master/src/components/Login/LoginManager.js"],"names":["firebase","firebaseConfig","initializeLoginFramework","initializeApp","handleGoogleSignIn","googleProvider","auth","GoogleAuthProvider","signInWithPopup","then","res","displayName","email","photoURL","user","isSignedInUser","isSignedIn","name","photo","setUser","console","log","catch","err","message","handleFbSignIn","fbProvider","FacebookAuthProvider","result","token","credential","accessToken","error","errorCode","code","errorMessage","handleSignOut","signOut","signedOutUser","phone","createUserWithEmailAndPassword","password","newUserInfo","success","updateUserName","signInWithEamilAndPassword","signInWithEmailAndPassword","setLoggedInUser","history","replace","from"],"mappings":"AAAA,OAAO,KAAKA,QAAZ,MAA0B,cAA1B;AACA,OAAO,eAAP;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AAKA,OAAO,MAAMC,wBAAwB,GAAG,MAAM;AAC1CF,EAAAA,QAAQ,CAACG,aAAT,CAAuBF,cAAvB;AACH,CAFM;AAIP,OAAO,MAAMG,kBAAkB,GAAG,MAAM;AACpC,QAAMC,cAAc,GAAG,IAAIL,QAAQ,CAACM,IAAT,CAAcC,kBAAlB,EAAvB;AACAP,EAAAA,QAAQ,CAACM,IAAT,GAAgBE,eAAhB,CAAgCH,cAAhC,EACCI,IADD,CACMC,GAAG,IAAE;AACT,UAAM;AAACC,MAAAA,WAAD;AAAaC,MAAAA,KAAb;AAAmBC,MAAAA;AAAnB,QAA+BH,GAAG,CAACI,IAAzC;AACA,UAAMC,cAAc,GAAG;AACrBC,MAAAA,UAAU,EAAC,IADU;AAErBC,MAAAA,IAAI,EAACN,WAFgB;AAGrBC,MAAAA,KAAK,EAACA,KAHe;AAKrBM,MAAAA,KAAK,EAACL;AALe,KAAvB;AAQAM,IAAAA,OAAO,CAACJ,cAAD,CAAP;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYV,WAAZ,EAAwBC,KAAxB,EAA8BC,QAA9B;AACD,GAbD,EAcCS,KAdD,CAcOC,GAAG,IAAE;AACVH,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACC,OAAhB;AACD,GAjBD;AAkBH,CApBM;AAyBP,OAAO,MAAMC,cAAc,GAAG,MAAM;AAChC,MAAIC,UAAU,GAAG,IAAI1B,QAAQ,CAACM,IAAT,CAAcqB,oBAAlB,EAAjB;AACA3B,EAAAA,QAAQ,CAACM,IAAT,GAAgBE,eAAhB,CAAgCkB,UAAhC,EAA4CjB,IAA5C,CAAkDmB,MAAD,IAAY;AAC3D;AACA,QAAIC,KAAK,GAAGD,MAAM,CAACE,UAAP,CAAkBC,WAA9B,CAF2D,CAG3D;;AACA,QAAIjB,IAAI,GAAGc,MAAM,CAACd,IAAlB,CAJ2D,CAK3D;AACD,GAND,EAMGQ,KANH,CAMS,UAASU,KAAT,EAAgB;AACvB;AACA,QAAIC,SAAS,GAAGD,KAAK,CAACE,IAAtB;AACA,QAAIC,YAAY,GAAGH,KAAK,CAACR,OAAzB,CAHuB,CAIvB;;AACA,QAAIZ,KAAK,GAAGoB,KAAK,CAACpB,KAAlB,CALuB,CAMvB;;AACA,QAAIkB,UAAU,GAAGE,KAAK,CAACF,UAAvB,CAPuB,CAQvB;AACD,GAfD;AAgBH,CAlBM;AAoBP,OAAO,MAAMM,aAAa,GAAG,MAAM;AAC/BpC,EAAAA,QAAQ,CAACM,IAAT,GAAgB+B,OAAhB,GACC5B,IADD,CACMC,GAAG,IAAE;AACT,UAAM4B,aAAa,GAAI;AACrBtB,MAAAA,UAAU,EAAC,KADU;AAErBC,MAAAA,IAAI,EAAC,EAFgB;AAGrBsB,MAAAA,KAAK,EAAC,EAHe;AAIrB3B,MAAAA,KAAK,EAAC;AAJe,KAAvB;AAOAO,IAAAA,OAAO,CAACmB,aAAD,CAAP;AACAlB,IAAAA,OAAO,CAACC,GAAR,CAAYX,GAAZ;AACD,GAXD,EAYCY,KAZD,CAYOC,GAAG,IAAG;AACXH,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,GAdD;AAeH,CAhBM;AAkBP,OAAO,MAAMiB,8BAA8B,GAAG,MAAI;AAC9CxC,EAAAA,QAAQ,CAACM,IAAT,GAAgBkC,8BAAhB,CAA+C1B,IAAI,CAACF,KAApD,EAA2DE,IAAI,CAAC2B,QAAhE,EAEChC,IAFD,CAEMC,GAAG,IAAE;AACT,UAAMgC,WAAW,GAAG,EAAC,GAAG5B;AAAJ,KAApB;AACF4B,IAAAA,WAAW,CAACV,KAAZ,GAAoB,EAApB;AACAU,IAAAA,WAAW,CAACC,OAAZ,GAAsB,IAAtB;AACExB,IAAAA,OAAO,CAACuB,WAAD,CAAP;AACAE,IAAAA,cAAc,CAAC9B,IAAI,CAACG,IAAN,CAAd;AACD,GARD,EASCK,KATD,CASQU,KAAD,IAAU;AACf;AACA,UAAMU,WAAW,GAAG,EAAC,GAAG5B;AAAJ,KAApB;AACA4B,IAAAA,WAAW,CAACV,KAAZ,GAAoBA,KAAK,CAACR,OAA1B;AACAkB,IAAAA,WAAW,CAACC,OAAZ,GAAsB,KAAtB;AACAxB,IAAAA,OAAO,CAACuB,WAAD,CAAP;AACA,QAAIT,SAAS,GAAGD,KAAK,CAACE,IAAtB;AACA,QAAIC,YAAY,GAAGH,KAAK,CAACR,OAAzB;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYY,SAAZ,EAAsBE,YAAtB,EARe,CASf;AACD,GAnBD;AAoBH,CArBM;AAuBP,OAAO,MAAMU,0BAA0B,GAAG,MAAM;AAE5C7C,EAAAA,QAAQ,CAACM,IAAT,GAAgBwC,0BAAhB,CAA2ChC,IAAI,CAACF,KAAhD,EAAuDE,IAAI,CAAC2B,QAA5D,EACGhC,IADH,CACQC,GAAG,IAAI;AACX,UAAMgC,WAAW,GAAG,EAAC,GAAG5B;AAAJ,KAApB;AACA4B,IAAAA,WAAW,CAACV,KAAZ,GAAoB,EAApB;AACAU,IAAAA,WAAW,CAACC,OAAZ,GAAsB,IAAtB;AACExB,IAAAA,OAAO,CAACuB,WAAD,CAAP;AACAK,IAAAA,eAAe,CAACL,WAAD,CAAf;AACAM,IAAAA,OAAO,CAACC,OAAR,CAAgBC,IAAhB;AACA9B,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAgCX,GAAG,CAACI,IAApC;AACH,GATH,EAUGQ,KAVH,CAUSU,KAAK,IAAG;AACb;AACA,UAAMU,WAAW,GAAG,EAAC,GAAG5B;AAAJ,KAApB;AACA4B,IAAAA,WAAW,CAACV,KAAZ,GAAoBA,KAAK,CAACR,OAA1B;AACAkB,IAAAA,WAAW,CAACC,OAAZ,GAAsB,KAAtB;AACAxB,IAAAA,OAAO,CAACuB,WAAD,CAAP;AACA,QAAIT,SAAS,GAAGD,KAAK,CAACE,IAAtB;AACA,QAAIC,YAAY,GAAGH,KAAK,CAACR,OAAzB;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYY,SAAZ,EAAsBE,YAAtB,EARa,CASb;AACD,GApBH;AAqBH,CAvBM","sourcesContent":["import * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport firebaseConfig from './firebase.config';\r\n\r\n\r\n\r\n\r\nexport const initializeLoginFramework = () => {\r\n    firebase.initializeApp(firebaseConfig);\r\n}\r\n\r\nexport const handleGoogleSignIn = () => {\r\n    const googleProvider = new firebase.auth.GoogleAuthProvider();\r\n    firebase.auth().signInWithPopup(googleProvider)\r\n    .then(res=>{\r\n      const {displayName,email,photoURL} = res.user;\r\n      const isSignedInUser = {\r\n        isSignedIn:true,\r\n        name:displayName,\r\n        email:email,\r\n       \r\n        photo:photoURL,\r\n\r\n      }\r\n      setUser(isSignedInUser);\r\n      console.log(displayName,email,photoURL);\r\n    })\r\n    .catch(err=>{\r\n      console.log(err);\r\n      console.log(err.message);\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\nexport const handleFbSignIn = () => {\r\n    var fbProvider = new firebase.auth.FacebookAuthProvider();\r\n    firebase.auth().signInWithPopup(fbProvider).then((result) => {\r\n      // This gives you a Facebook Access Token. You can use it to access the Facebook API.\r\n      var token = result.credential.accessToken;\r\n      // The signed-in user info.\r\n      var user = result.user;\r\n      // ...\r\n    }).catch(function(error) {\r\n      // Handle Errors here.\r\n      var errorCode = error.code;\r\n      var errorMessage = error.message;\r\n      // The email of the user's account used.\r\n      var email = error.email;\r\n      // The firebase.auth.AuthCredential type that was used.\r\n      var credential = error.credential;\r\n      // ...\r\n    });\r\n}\r\n\r\nexport const handleSignOut = () => {\r\n    firebase.auth().signOut()\r\n    .then(res=>{\r\n      const signedOutUser = ({\r\n        isSignedIn:false,\r\n        name:'',\r\n        phone:'',\r\n        email:'',\r\n\r\n      })\r\n      setUser(signedOutUser);\r\n      console.log(res);\r\n    })\r\n    .catch(err =>{\r\n      console.log(err);\r\n    })\r\n}\r\n\r\nexport const createUserWithEmailAndPassword = ()=>{\r\n    firebase.auth().createUserWithEmailAndPassword(user.email, user.password)\r\n\r\n    .then(res=>{\r\n      const newUserInfo = {...user};\r\n    newUserInfo.error = '';\r\n    newUserInfo.success = true;\r\n      setUser(newUserInfo);\r\n      updateUserName(user.name);\r\n    })\r\n    .catch((error)=> {\r\n      // Handle Errors here.\r\n      const newUserInfo = {...user};\r\n      newUserInfo.error = error.message;\r\n      newUserInfo.success = false;\r\n      setUser(newUserInfo);\r\n      var errorCode = error.code;\r\n      var errorMessage = error.message;\r\n      console.log(errorCode,errorMessage);\r\n      // ...\r\n    });\r\n}\r\n\r\nexport const signInWithEamilAndPassword = () => {\r\n    \r\n    firebase.auth().signInWithEmailAndPassword(user.email, user.password)\r\n      .then(res => {\r\n        const newUserInfo = {...user};\r\n        newUserInfo.error = '';\r\n        newUserInfo.success = true;\r\n          setUser(newUserInfo);\r\n          setLoggedInUser(newUserInfo);\r\n          history.replace(from);\r\n          console.log('sign in User Info',res.user);\r\n      })\r\n      .catch(error=> {\r\n        // Handle Errors here.\r\n        const newUserInfo = {...user};\r\n        newUserInfo.error = error.message;\r\n        newUserInfo.success = false;\r\n        setUser(newUserInfo);\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        console.log(errorCode,errorMessage);\r\n        // ...\r\n      });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}