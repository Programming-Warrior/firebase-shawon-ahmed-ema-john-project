{"ast":null,"code":"import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport firebaseConfig from './firebase.config';\nexport const initializeLoginFramework = () => {\n  firebase.initializeApp(firebaseConfig);\n};\nexport const handleGoogleSignIn = () => {\n  const googleProvider = new firebase.auth.GoogleAuthProvider();\n  return firebase.auth().signInWithPopup(googleProvider).then(res => {\n    const {\n      displayName,\n      email,\n      photoURL\n    } = res.user;\n    const isSignedInUser = {\n      isSignedIn: true,\n      name: displayName,\n      email: email,\n      photo: photoURL\n    };\n    return isSignedInUser;\n    console.log(displayName, email, photoURL);\n  }).catch(err => {\n    console.log(err);\n    console.log(err.message);\n  });\n};\nexport const handleFbSignIn = () => {\n  var fbProvider = new firebase.auth.FacebookAuthProvider();\n  return firebase.auth().signInWithPopup(fbProvider).then(result => {\n    // This gives you a Facebook Access Token. You can use it to access the Facebook API.\n    var token = result.credential.accessToken; // The signed-in user info.\n\n    var user = result.user;\n    return user; // ...\n  }).catch(function (error) {\n    // Handle Errors here.\n    var errorCode = error.code;\n    var errorMessage = error.message; // The email of the user's account used.\n\n    var email = error.email; // The firebase.auth.AuthCredential type that was used.\n\n    var credential = error.credential; // ...\n  });\n};\nexport const handleSignOut = () => {\n  return firebase.auth().signOut().then(res => {\n    const signedOutUser = {\n      isSignedIn: false,\n      name: '',\n      phone: '',\n      email: ''\n    };\n    return signedOutUser;\n    console.log(res);\n  }).catch(err => {\n    console.log(err);\n  });\n}; // export const createUserWithEmailAndPassword = ()=>{\n//     firebase.auth().createUserWithEmailAndPassword(user.email, user.password)\n//     .then(res=>{\n//       const newUserInfo = {...user};\n//     newUserInfo.error = '';\n//     newUserInfo.success = true;\n//       setUser(newUserInfo);\n//       updateUserName(user.name);\n//     })\n//     .catch((error)=> {\n//       // Handle Errors here.\n//       const newUserInfo = {...user};\n//       newUserInfo.error = error.message;\n//       newUserInfo.success = false;\n//       setUser(newUserInfo);\n//       var errorCode = error.code;\n//       var errorMessage = error.message;\n//       console.log(errorCode,errorMessage);\n//       // ...\n//     });\n// }\n// export const signInWithEamilAndPassword = () => {\n//     firebase.auth().signInWithEmailAndPassword(user.email, user.password)\n//       .then(res => {\n//         const newUserInfo = {...user};\n//         newUserInfo.error = '';\n//         newUserInfo.success = true;\n//           setUser(newUserInfo);\n//           setLoggedInUser(newUserInfo);\n//           history.replace(from);\n//           console.log('sign in User Info',res.user);\n//       })\n//       .catch(error=> {\n//         // Handle Errors here.\n//         const newUserInfo = {...user};\n//         newUserInfo.error = error.message;\n//         newUserInfo.success = false;\n//         setUser(newUserInfo);\n//         var errorCode = error.code;\n//         var errorMessage = error.message;\n//         console.log(errorCode,errorMessage);\n//         // ...\n//       });\n// }\n// const updateUserName = (name) => {\n//     const user = firebase.auth().currentUser;\n//     user.updateProfile({\n//       displayName: name,\n//     }).then(()=> {\n//       console.log('user name updated succesfully');\n//       // Update successful.\n//     }).catch((error)=> {\n//       // An error happened.\n//       console.log(error);\n//     });\n//   }","map":{"version":3,"sources":["C:/webDevelopment/myProjects/ema-johnWith-firebase/src/components/Login/LoginManager.js"],"names":["firebase","firebaseConfig","initializeLoginFramework","initializeApp","handleGoogleSignIn","googleProvider","auth","GoogleAuthProvider","signInWithPopup","then","res","displayName","email","photoURL","user","isSignedInUser","isSignedIn","name","photo","console","log","catch","err","message","handleFbSignIn","fbProvider","FacebookAuthProvider","result","token","credential","accessToken","error","errorCode","code","errorMessage","handleSignOut","signOut","signedOutUser","phone"],"mappings":"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","sourcesContent":["import * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport firebaseConfig from './firebase.config';\r\n\r\n\r\n\r\n\r\nexport const initializeLoginFramework = () => {\r\n    firebase.initializeApp(firebaseConfig);\r\n}\r\n\r\nexport const handleGoogleSignIn = () => {\r\n    const googleProvider = new firebase.auth.GoogleAuthProvider();\r\n    return firebase.auth().signInWithPopup(googleProvider)\r\n    .then(res=>{\r\n      const {displayName,email,photoURL} = res.user;\r\n      const isSignedInUser = {\r\n        isSignedIn:true,\r\n        name:displayName,\r\n        email:email,\r\n       \r\n        photo:photoURL,\r\n\r\n      }\r\n     return isSignedInUser;\r\n      console.log(displayName,email,photoURL);\r\n    })\r\n    .catch(err=>{\r\n      console.log(err);\r\n      console.log(err.message);\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\nexport const handleFbSignIn = () => {\r\n    var fbProvider = new firebase.auth.FacebookAuthProvider();\r\n    return firebase.auth().signInWithPopup(fbProvider).then((result) => {\r\n      // This gives you a Facebook Access Token. You can use it to access the Facebook API.\r\n      var token = result.credential.accessToken;\r\n      // The signed-in user info.\r\n      var user = result.user;\r\n      return user;\r\n      // ...\r\n    }).catch(function(error) {\r\n      // Handle Errors here.\r\n      var errorCode = error.code;\r\n      var errorMessage = error.message;\r\n      // The email of the user's account used.\r\n      var email = error.email;\r\n      // The firebase.auth.AuthCredential type that was used.\r\n      var credential = error.credential;\r\n      // ...\r\n    });\r\n}\r\n\r\nexport const handleSignOut = () => {\r\n   return firebase.auth().signOut()\r\n    .then(res=>{\r\n      const signedOutUser = ({\r\n        isSignedIn:false,\r\n        name:'',\r\n        phone:'',\r\n        email:'',\r\n\r\n      })\r\n      return signedOutUser;\r\n      console.log(res);\r\n    })\r\n    .catch(err =>{\r\n      console.log(err);\r\n    })\r\n}\r\n\r\n// export const createUserWithEmailAndPassword = ()=>{\r\n//     firebase.auth().createUserWithEmailAndPassword(user.email, user.password)\r\n\r\n//     .then(res=>{\r\n//       const newUserInfo = {...user};\r\n//     newUserInfo.error = '';\r\n//     newUserInfo.success = true;\r\n//       setUser(newUserInfo);\r\n//       updateUserName(user.name);\r\n//     })\r\n//     .catch((error)=> {\r\n//       // Handle Errors here.\r\n//       const newUserInfo = {...user};\r\n//       newUserInfo.error = error.message;\r\n//       newUserInfo.success = false;\r\n//       setUser(newUserInfo);\r\n//       var errorCode = error.code;\r\n//       var errorMessage = error.message;\r\n//       console.log(errorCode,errorMessage);\r\n//       // ...\r\n//     });\r\n// }\r\n\r\n// export const signInWithEamilAndPassword = () => {\r\n    \r\n//     firebase.auth().signInWithEmailAndPassword(user.email, user.password)\r\n//       .then(res => {\r\n//         const newUserInfo = {...user};\r\n//         newUserInfo.error = '';\r\n//         newUserInfo.success = true;\r\n//           setUser(newUserInfo);\r\n//           setLoggedInUser(newUserInfo);\r\n//           history.replace(from);\r\n//           console.log('sign in User Info',res.user);\r\n//       })\r\n//       .catch(error=> {\r\n//         // Handle Errors here.\r\n//         const newUserInfo = {...user};\r\n//         newUserInfo.error = error.message;\r\n//         newUserInfo.success = false;\r\n//         setUser(newUserInfo);\r\n//         var errorCode = error.code;\r\n//         var errorMessage = error.message;\r\n//         console.log(errorCode,errorMessage);\r\n//         // ...\r\n//       });\r\n// }\r\n\r\n// const updateUserName = (name) => {\r\n//     const user = firebase.auth().currentUser;\r\n\r\n//     user.updateProfile({\r\n//       displayName: name,\r\n//     }).then(()=> {\r\n//       console.log('user name updated succesfully');\r\n//       // Update successful.\r\n//     }).catch((error)=> {\r\n//       // An error happened.\r\n//       console.log(error);\r\n//     });\r\n//   } \r\n"]},"metadata":{},"sourceType":"module"}